apply from: '../../java.gradle'
apply plugin: "jacoco"
//apply plugin: "com.github.spotbugs"

group = 'com.virginvoyages.shared'
version = '0.0.1-SNAPSHOT'

description = "shared-code"

dependencies {
    compile "org.springframework.boot:spring-boot-starter:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    compile "ch.qos.logback:logback-core:$logbackCoreVersion"
    compile "ch.qos.logback:logback-access:$logbackCoreVersion"    
    compile "net.logstash.logback:logstash-logback-encoder:$logbackVersion"
    compile "org.springframework.boot:spring-boot-starter-tomcat:$springBootVersion"
    compile "org.projectlombok:lombok:1.16.16"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
 
        compile "org.springframework.cloud:spring-cloud-starter-security"
    	compile "org.springframework.cloud:spring-cloud-starter-oauth2:1.2.1.RELEASE"        
        
    
    testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testCompile "io.rest-assured:rest-assured:3.0.3"
}

jacocoTestReport {
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    //'**/*Data**',
                    // TODO Refactor to use naming (package or class) and regular expression
                    // Exclude Lombok generated code.
                    'com/virginvoyages/model/crossreference/Reference.class',
                    'com/virginvoyages/model/crossreference/References.class',
                    'com/virginvoyages/model/crossreference/ReferencesEmbedded.class',
                    'com/virginvoyages/model/crossreference/ReferenceSource.class',
                    'com/virginvoyages/model/crossreference/ReferenceType.class',
                    'com/virginvoyages/crossreference/data/entities/ReferenceSourceData.class',
                    'com/virginvoyages/crossreference/data/entities/ReferenceTypeData.class',
                    'com/virginvoyages/crossreference/data/entities/ReferenceData.class',
                    // Exclude POJO
                    'com/virginvoyages/model/Link.class',
                    'com/virginvoyages/model/Links.class',
                    'com/virginvoyages/model/Page.class',
                    
            ])
        })
    }
}


tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled false
        html.enabled true
    }
}