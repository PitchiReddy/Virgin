
apply from: "../../java.gradle"
apply plugin: "org.springframework.boot"
apply plugin: "docker"
apply plugin: "com.gorylenko.gradle-git-properties"
apply plugin: "jacoco"

group = "com.virginvoyages"
version = '1.0'
description = "sailor-api"

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

dependencies {
    
	compile(project(':components:hbase-starter')){
	 exclude group: 'org.slf4j', module: 'slf4j-log4j12'
	 exclude group: 'log4j', module: "log4j"
	 
	}
	compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-hateoas"
    compile "org.springframework.cloud:spring-cloud-starter-feign"
    compile "org.springframework.cloud:spring-cloud-starter-security"
    compile "org.springframework.security.oauth:spring-security-oauth2"
    compile "ch.qos.logback:logback-core:1.2.3"
    compile "net.logstash.logback:logstash-logback-encoder:$logbackVersion"
    compile "io.springfox:springfox-swagger2:$springFoxVersion"
    compile "io.springfox:springfox-swagger-ui:$springFoxVersion"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:2.8.8"
    compile "joda-time:joda-time:2.9.9"
    compile "org.projectlombok:lombok:1.16.16"
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "io.rest-assured:rest-assured:3.0.3"
}

task buildDocker(type: Docker, dependsOn: build) {
    push = false // Change to true for remote push
    //tag = "murtazacg/sailor-api"
    dockerfile = file("src/main/docker/Dockerfile")
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

// The run task added by the application plugin
// is also of type JavaExec.
tasks.withType(JavaExec) {
    // Assign all Java system properties from
    // the command line to the JavaExec task.
    systemProperties System.properties
}

springBoot  {
    // This statement tells the Gradle Spring Boot plugin
    // to generate a file
    // build/resources/main/META-INF/build-info.properties
    // that is picked up by Spring Boot to display
    // via /info endpoint.
    buildInfo()
}


jacocoTestReport {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
}
